const e=e=>e.map((e=>{const t=e.genre_ids.map((e=>e.name)).join(", ");return`<div class="movie-card" data-id="${e.id}">\n            <img\n              src="https://image.tmdb.org/t/p/w500/${e.poster_path}"\n              alt="${t}"\n              loading="lazy"\n            />\n            <div class="info">\n              <p class="movie__title">${e.original_title}</p> <p class="movie__genres">${t}</p>\n            </div>\n          </div>`})).join("");fetch("https://api.themoviedb.org/3/trending/movie/day?api_key=64cb7e9375c055230d64b013c4bca79f").then((e=>e.ok?e.json():(420===e.status?console.error("Error: Too many request to API."):console.error("Error: Failed to fetch data from API. Status code:",e.status),Promise.reject(new Error(e.status))))).catch((e=>(console.error(e),Promise.reject(new Error("An error occured while fetching the data."))))).then((t=>{const o=e(t.results);document.getElementById("main").innerHTML=o})).catch((e=>{console.error(e)}));const t=()=>{const t=document.getElementById("search").value.trim();var o;(o=t,fetch(`https://api.themoviedb.org/3/search/movie?api_key=64cb7e9375c055230d64b013c4bca79f&language=en-US&query=${o}&page=1&include_adult=false`).then((e=>e.ok?e.json():(429===e.status?console.error("Error: Too many requests to API."):console.error("Error: Failed to fetch data from API. Status code:",e.status),Promise.reject(new Error(e.status))))).catch((e=>(console.error(e),Promise.reject(new Error("An error occurred while fetching the data.")))))).then((t=>{const o=e(t.results);document.getElementById("main").innerHTML=o;document.querySelectorAll(".movie-card").forEach((e=>{e.addEventListener("click",(()=>{console.log(e)}))}))})).catch((e=>{console.error("Error:",e)}))};document.getElementById("button").addEventListener("click",t);const o=(e,t)=>{let o=localStorage.getItem("user"),r={};o&&(r=JSON.parse(o)),r[t]||(r[t]=[]),r[t].includes(e)||r[t].push(e),localStorage.setItem("user",JSON.stringify(r))},r=()=>{document.querySelector(".backdrop").remove(),document.body.classList.remove("overflow-off")},a=e=>{const t=e.genres.map((e=>e.name)).join(", ");return`\n    <div class='modal'>\n        <button class='modal__button modal__button--close' id='modal__close'>\n            x\n        </button>\n        <img class="modal__img" src="https://image.tmdb.org/t/p/w500//${e.poster_path}" />\n        <div class="modal__content">\n            <h2 class="modal__title">${e.original_title}</h2>\n            <ul class="modal__list">\n                <li class="modal__item">\n                    <p class="modal__item--label grey">Vote / Votes</p>\n                    <div class="modal__item--vote">\n                        <p class="modal__item--value modal__item--value--vote">\n                            <vote_average>\n                                ${e.vote_average.toFixed(1)}\n                            </vote_average>\n                            /\n                            <vote__count>\n                                ${e.vote_count}\n                            </vote__count>\n                        </p>\n                    </div>\n                <li>\n                <li class="modal__item">\n                    <p class="modal__item--label grey">Popularity</p>\n                    <p class="modal__item--value">${e.popularity.toFixed(1)}</p>\n                <li>\n                <li class="modal__item">\n                    <p class="modal__item--label grey">Original Title</p>\n                    <p class="modal__item--value big">${e.original_title}</p>\n                <li>\n                <li class="modal__item">\n                    <p class="modal__item--label grey">Genre</p>\n                    <p class="modal__item--value">${t}</p>\n                <li>\n            </ul>\n            <div class="modal__overview">\n                <h3 class="modal__overview--about">ABOUT</h3>\n                <p class="modal__overview--overview">${e.overview}</p>\n            </div>\n        <div class="modal__buttons">\n            <button id="watched" class="modal__button modal__button--watched">Add to watched</button>\n            <button id="queue" class="modal__button modal__button--queue">Add to queue</button>\n        </div>\n    </div>\n    `};document.querySelector("#main").addEventListener("click",(e=>{if(!e.target.closest(".movie-card"))return;const t=document.createElement("div");t.classList.add("backdrop");const n=e.target.closest(".movie-card").getAttribute("data-id");var s;(s=n,fetch(`https://api.themoviedb.org/3/movie/${s}?api_key=64cb7e9375c055230d64b013c4bca79f`).then((e=>e.ok?e.json():(429===e.status?console.error("Error: Too many requests to API."):console.error("Error: Failed to fetch data from API. Status code:",e.status),Promise.reject(new Error(e.status))))).catch((e=>(console.error(e),Promise.reject(new Error("An error occurred while fetching the data.")))))).then((e=>{t.innerHTML=a(e),document.body.appendChild(t),document.body.classList.add("overflow-off");const s=document.querySelector("#modal__close"),c=document.getElementById("watched"),l=document.getElementById("queue");c.addEventListener("click",(()=>o(n,"watched"))),l.addEventListener("click",(()=>o(n,"queue"))),s.addEventListener("click",r)})).catch((e=>{console.error(e)}))}));
//# sourceMappingURL=index.95069b2d.js.map
