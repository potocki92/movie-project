{"mappings":"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","sources":["src/js/renderListMarkup.js","src/js/api/fetchMoviesTrending.js","src/js/api/fetchMovies.js","src/js/searchMovies.js","src/js/api/fetchMovieById.js","src/js/localStorage/localStorage.js","src/js/modal/closeModal.js","src/js/modal/modalMarkup.js","src/js/modal/openModal.js"],"sourcesContent":["const renderList = movies => {\n  const markup = movies\n    .map(movie => {\n      const tags = movie.genre_ids.map(genre => genre.name).join(', ');\n      return `<div class=\"movie-card\" data-id=\"${movie.id}\">\n            <img\n              src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\"\n              alt=\"${tags}\"\n              loading=\"lazy\"\n            />\n            <div class=\"info\">\n              <p class=\"movie__title\">${movie.original_title}</p> <p class=\"movie__genres\">${tags}</p>\n            </div>\n          </div>`;\n    })\n    .join('');\n\n  return markup;\n};\nexport { renderList };\n","import { renderList } from '../renderListMarkup';\n\n// Pobiera aktualnie najlepsze filmy dnia\n\nconst fetchMoviesTrending = () => {\n  const API_KEY = `64cb7e9375c055230d64b013c4bca79f`;\n  const API_URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 420) {\n          // Za dużo odwołań\n          console.error('Error: Too many request to API.');\n        } else {\n          console.error(\n            'Error: Failed to fetch data from API. Status code:',\n            response.status\n          );\n        }\n        return Promise.reject(new Error(response.status));\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.error(error);\n      return Promise.reject(\n        new Error('An error occured while fetching the data.')\n      );\n    });\n};\n\nfetchMoviesTrending()\n  .then(movies => {\n    const markup = renderList(movies.results);\n    document.getElementById('main').innerHTML = markup;\n  })\n  .catch(error => {\n    console.error(error);\n  });\nexport { fetchMoviesTrending };\n","\nconst fetchMovies = name => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error(\n            'Error: Failed to fetch data from API. Status code:',\n            response.status\n          );\n        }\n        return Promise.reject(new Error(response.status));\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.error(error);\n      return Promise.reject(\n        new Error('An error occurred while fetching the data.')\n      );\n    });\n};\nexport { fetchMovies };\n","import { fetchMovies } from './api/fetchMovies';\nimport { renderList } from './renderListMarkup';\n\n// Wyszukuje filmy po wpisaniu w wyszukiwarce\n\nconst searchMovies = () => {\n  const searchInput = document.getElementById('search');\n  const searchValue = searchInput.value.trim();\n\n  fetchMovies(searchValue)\n    .then(movies => {\n      const markup = renderList(movies.results);\n      document.getElementById('main').innerHTML = markup;\n\n      // wywołanie funkcji `openModal` z odpowiednimi argumentami po utworzeniu elementów z wynikami wyszukiwania.\n      const movieCards = document.querySelectorAll('.movie-card');\n      movieCards.forEach(movieCard => {\n        movieCard.addEventListener('click', () => {\n          // Pobierz dane filmu z atrybutów `data-*` klikniętego elementu `.movie-card`.\n          console.log(movieCard);\n        });\n      });\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      // Tutaj możesz wyświetlić informację o błędzie w interfejsie użytkownika\n    });\n};\n\nconst button = document.getElementById('button');\nbutton.addEventListener('click', searchMovies);\n\nexport { searchMovies };\n","'use strict';\n\n// funkcja pobierająca dane o filmie po id\nconst fetchMovieById = id => {\n  const API_KEY = '64cb7e9375c055230d64b013c4bca79f';\n  const API_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 429) {\n          // Too Many Requests\n          console.error('Error: Too many requests to API.');\n        } else {\n          console.error(\n            'Error: Failed to fetch data from API. Status code:',\n            response.status\n          );\n        }\n        return Promise.reject(new Error(response.status));\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.error(error);\n      return Promise.reject(\n        new Error('An error occurred while fetching the data.')\n      );\n    });\n};\nexport { fetchMovieById };\n","/*\n    Funkcja addToLocalStorage dodaje identyfikator (id) do listy (listName) \n    przechowywanej w pamięci lokalnej przeglądarki dla zalogowanego użytkownika. \n    Jeśli lista nie istnieje, zostanie utworzona. \n*/\nconst addToLocalStorage = (id, listName) => {\n  let storedList = localStorage.getItem('user');\n  let parsedList = {};\n\n  if (storedList) {\n    parsedList = JSON.parse(storedList);\n  }\n\n  if (!parsedList[listName]) {\n    parsedList[listName] = [];\n  }\n\n  if (!parsedList[listName].includes(id)) {\n    parsedList[listName].push(id);\n  }\n\n  localStorage.setItem('user', JSON.stringify(parsedList));\n};\nexport { addToLocalStorage };\n","'use strict';\n\n// funkcja zamykająca modal\nconst closeModal = () => {\n  const backdrop = document.querySelector('.backdrop');\n  backdrop.remove();\n  // usuwamy klasę blokującą możliwość skrolowania\n  document.body.classList.remove('overflow-off');\n};\n\nexport { closeModal };\n","// protsy markup z modalem\nconst markupData = e => {\n  const genres = e.genres.map(genre => genre.name).join(', ');\n  const markup = `\n    <div class='modal'>\n        <button class='modal__button modal__button--close' id='modal__close'>\n            x\n        </button>\n        <img class=\"modal__img\" src=\"https://image.tmdb.org/t/p/w500//${\n          e.poster_path\n        }\" />\n        <div class=\"modal__content\">\n            <h2 class=\"modal__title\">${e.original_title}</h2>\n            <ul class=\"modal__list\">\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label grey\">Vote / Votes</p>\n                    <div class=\"modal__item--vote\">\n                        <p class=\"modal__item--value modal__item--value--vote\">\n                            <vote_average>\n                                ${e.vote_average.toFixed(1)}\n                            </vote_average>\n                            /\n                            <vote__count>\n                                ${e.vote_count}\n                            </vote__count>\n                        </p>\n                    </div>\n                <li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label grey\">Popularity</p>\n                    <p class=\"modal__item--value\">${e.popularity.toFixed(1)}</p>\n                <li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label grey\">Original Title</p>\n                    <p class=\"modal__item--value big\">${e.original_title}</p>\n                <li>\n                <li class=\"modal__item\">\n                    <p class=\"modal__item--label grey\">Genre</p>\n                    <p class=\"modal__item--value\">${genres}</p>\n                <li>\n            </ul>\n            <div class=\"modal__overview\">\n                <h3 class=\"modal__overview--about\">ABOUT</h3>\n                <p class=\"modal__overview--overview\">${e.overview}</p>\n            </div>\n        <div class=\"modal__buttons\">\n            <button id=\"watched\" class=\"modal__button modal__button--watched\">Add to watched</button>\n            <button id=\"queue\" class=\"modal__button modal__button--queue\">Add to queue</button>\n        </div>\n    </div>\n    `;\n\n  return markup;\n};\nexport { markupData };\n","'use strict';\n\nimport { fetchMovieById } from '../api/fetchMovieById';\nimport { addToLocalStorage } from '../localStorage/localStorage';\nimport { closeModal } from './closeModal';\nimport { markupData } from './modalMarkup';\n\nconst mainContent = document.querySelector('#main');\n\n// funkcja otwierająca modal\nconst openModal = e => {\n  // przerywa funkcję, jeśli zdarzenie nie występuje na elemencie z klasą \"movie-card\".\n  if (!e.target.closest('.movie-card')) {\n    return;\n  }\n\n  const backdrop = document.createElement('div');\n  backdrop.classList.add('backdrop');\n\n  // pobranie id filmu z atrybutu \"data-id\" klikniętego elementu\n  const movieId = e.target.closest('.movie-card').getAttribute('data-id');\n\n  fetchMovieById(movieId)\n    .then(movieData => {\n      backdrop.innerHTML = markupData(movieData);\n\n      // dodanie elementu backdrop do ciała dokumentu\n      document.body.appendChild(backdrop);\n\n      // blokuje możliwość skrolowania w momencie uruchomienia modala\n      document.body.classList.add('overflow-off');\n\n      const closeModalButton = document.querySelector('#modal__close');\n\n      const watchedButton = document.getElementById('watched');\n      const queueButton = document.getElementById('queue');\n      /*\n        Ten fragment kodu reaguje na kliknięcie przycisków \"watchedButton\" i \"queueButton\" i wywołuje \n        funkcję \"addToLocalStorage\" z odpowiednimi argumentami. Funkcja ta zapisuje identyfikator filmu \n        do lokalnego magazynu przeglądarki pod kluczem \"user\" i listą \"watched\" lub \"queue\", w zależności od przycisku, \n        który został kliknięty.\n      */\n      watchedButton.addEventListener('click', () =>\n        addToLocalStorage(movieId, 'watched')\n      );\n      queueButton.addEventListener('click', () =>\n        addToLocalStorage(movieId, 'queue')\n      );\n      // dodanie nasłuchiwania na zdarzenie 'click' do elementu `closeModalButton` z funkcją `closeModal`\n      closeModalButton.addEventListener('click', closeModal);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\n// dodanie nasłuchiwania na zdarzenie 'click' do elementu `mainContent` z funkcją `openModal`\nmainContent.addEventListener('click', openModal);\n\nexport { openModal };\n"],"names":["API_URL","$02b74a130b5b1b93$export$4bf387f59bfc6d67","movies","map","movie","tags","genre_ids","genre","name","join","concat","id","poster_path","original_title","fetch","then","response","ok","json","status","console","error","Promise","reject","Error","catch","markup","results","document","getElementById","innerHTML","$f77f598278a76b9f$export$88181abcadffafee","$e1a441075edf8b92$export$b0c4d3ac9887d994","searchValue","value","trim","querySelectorAll","forEach","movieCard","addEventListener","log","$580cdfb29d7abd41$export$6d0761608aa90887","$603ee17184359926$export$b4aebac53294aa19","listName","storedList","localStorage","getItem","parsedList","JSON","parse","includes","push","setItem","stringify","$5aedbefb39bcb9b1$export$3f6fecd573f3fa48","querySelector","remove","body","classList","$a319137e6235f254$export$3bb2bf23ff4f0200","e","genres","vote_average","toFixed","vote_count","popularity","overview","target","closest","backdrop","createElement","add","movieId","getAttribute","movieData","appendChild","closeModalButton","watchedButton","queueButton"],"version":3,"file":"index.6ad1a01f.js.map"}